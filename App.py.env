from flask import Flask, request, jsonify
from flask_cors import CORS
import json
import datetime
import os
from dotenv import load_dotenv
import openai

from agente_ia import CEONexus, AgenteTarefaEspecifica, GerenciadorAgentes

# Carregar vari√°veis do ambiente
load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")

app = Flask(__name__)
CORS(app)

gerenciador = GerenciadorAgentes()

def inicializar_agentes():
    gerenciador.carregar_estado()

    if not gerenciador.agentes:
        ceo_nexus = CEONexus()
        agente_desenvolvimento = AgenteTarefaEspecifica("Agente de Desenvolvimento", "Desenvolvimento de C√≥digo")
        agente_design = AgenteTarefaEspecifica("Agente de Design Visual", "Cria√ß√£o de Interfaces e Gr√°ficos")
        agente_analise = AgenteTarefaEspecifica("Agente de An√°lise de Dados", "Processamento e Interpreta√ß√£o de Dados")

        gerenciador.agentes[ceo_nexus.nome] = ceo_nexus
        gerenciador.agentes[agente_desenvolvimento.nome] = agente_desenvolvimento
        gerenciador.agentes[agente_design.nome] = agente_design
        gerenciador.agentes[agente_analise.nome] = agente_analise

        ceo_nexus.adicionar_agente(agente_desenvolvimento)
        ceo_nexus.adicionar_agente(agente_design)
        ceo_nexus.adicionar_agente(agente_analise)

        gerenciador.salvar_estado()

inicializar_agentes()

@app.route('/')
def home():
    return jsonify({
        "message": "EcoGuardians API - Sistema de Agentes IA",
        "version": "1.0.0",
        "status": "online"
    })

@app.route('/api/ia/testar', methods=['POST'])
def testar_ia():
    data = request.get_json()
    if not data or 'mensagem' not in data:
        return jsonify({"error": "Mensagem n√£o enviada"}), 400

    try:
        resposta = openai.ChatCompletion.create(
            model="gpt-4",  # ou "gpt-3.5-turbo"
            messages=[
                {"role": "system", "content": "Voc√™ √© um agente inteligente do projeto EcoGuardians."},
                {"role": "user", "content": data['mensagem']}
            ]
        )
        conteudo = resposta['choices'][0]['message']['content']
        return jsonify({"resposta": conteudo})

    except Exception as e:
        return jsonify({"error": str(e)}), 500

# üîÅ Seus outros endpoints continuam abaixo normalmente...
# (exemplo: /api/agents, /api/system/status, etc.)
# Eles podem ser colados aqui sem altera√ß√£o.
