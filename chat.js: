// A chave da API do Gemini foi removida deste arquivo por segurança.
// Agora, toda a comunicação é feita com o nosso back-end.

const CHAT_API_URL = "/api/gerar_agente.py"; // O novo endereço do nosso back-end

const chatMessages = document.getElementById('chat-messages');
const userInput = document.getElementById('user-input');
const sendButton = document.getElementById('send-button');

if (sendButton && userInput && chatMessages) {
    sendButton.addEventListener('click', sendMessage);
    userInput.addEventListener('keypress', function(event) {
        if (event.key === 'Enter') {
            sendMessage();
        }
    });

    appendMessage('bot', 'Olá! Sou seu Agente IA. Como posso ajudar hoje?');
} else {
    console.error("Elementos do chat não encontrados. Verifique seu HTML (chat-messages, user-input, send-button).");
}

async function sendMessage() {
    const message = userInput.value.trim();
    if (message === "") return;

    appendMessage('user', message);
    userInput.value = '';

    try {
        const response = await fetch(CHAT_API_URL, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ prompt: message })
        });

        if (!response.ok) {
            const errorData = await response.json();
            console.error('Erro da API do Servidor:', errorData);
            appendMessage('bot', 'Desculpe, houve um erro ao processar sua solicitação.');
            return;
        }

        const data = await response.json();
        // A resposta agora vem do back-end, no campo 'response'
        const botResponse = data?.response || 'Não recebi uma resposta clara do Agente IA.';
        appendMessage('bot', botResponse);

    } catch (error) {
        console.error('Erro ao conectar com o servidor:', error);
        appendMessage('bot', 'Não foi possível conectar com o Agente IA. Verifique sua conexão.');
    }
}

function appendMessage(sender, text) {
    const messageElement = document.createElement('div');
    messageElement.classList.add('message', sender);
    messageElement.textContent = text;
    chatMessages.appendChild(messageElement);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}


